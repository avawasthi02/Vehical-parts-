{"version":3,"sources":["components/RevenueGraphs.js","pages/Dashboard.js","csrf.js","components/ComponentForm.js","pages/Components.js","components/VehicleForm.js","pages/Vehicles.js","components/IssueForm.js","pages/Issues.js","components/TransactionSummary.js","pages/Transactions.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["RevenueGraph","data","setData","useState","useEffect","async","response","axios","get","error","console","fetchData","React","createElement","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","activeDot","r","Dashboard","RevenueGraphs","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","ComponentForm","setName","repairPrice","setRepairPrice","purchasePrice","setPurchasePrice","onSubmit","e","preventDefault","post","repair_price","purchase_price","headers","value","onChange","target","required","step","Components","VehicleForm","make","setMake","model","setModel","year","setYear","Vehicles","IssueForm","vehicleId","setVehicleId","description","setDescription","componentId","setComponentId","repairNeeded","setRepairNeeded","vehicles","setVehicles","components","setComponents","vehiclesResponse","componentsResponse","vehicle","component","repair_needed","map","key","id","checked","Issues","TransactionSummary","issueId","setIssueId","finalPrice","setFinalPrice","issues","setIssues","issuesResponse","issue","final_price","Transactions","transactions","setTransactions","fetch","then","json","catch","transaction","date","Navbar","Link","to","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.de163a81.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\nconst RevenueGraph = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch revenue data from the API\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('/api/revenue/'); // Endpoint to be created in Django\r\n                setData(response.data);\r\n            } catch (error) {\r\n                console.error(\"There was an error fetching the revenue data!\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height={400}>\r\n            <LineChart data={data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n};\r\n\r\nexport default RevenueGraph;\r\n","import React from 'react';\r\nimport RevenueGraphs from '../components/RevenueGraphs';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <RevenueGraphs />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nconst csrftoken = getCookie('csrftoken');\r\nexport default csrftoken;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport csrftoken from '../csrf'; // Adjust the path as necessary\r\n\r\nconst ComponentForm = () => {\r\n    const [name, setName] = useState('');\r\n    const [repairPrice, setRepairPrice] = useState('');\r\n    const [purchasePrice, setPurchasePrice] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('/api/components/',\r\n                {\r\n                    name,\r\n                    repair_price: repairPrice,\r\n                    purchase_price: purchasePrice\r\n                },\r\n                {\r\n                    headers: {\r\n                        'X-CSRFToken': csrftoken // Send the CSRF token\r\n                    }\r\n                }\r\n            );\r\n            // Reset form fields\r\n            setName('');\r\n            setRepairPrice('');\r\n            setPurchasePrice('');\r\n        } catch (error) {\r\n            console.error(\"There was an error!\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Component</h2>\r\n            <div>\r\n                <label>Name:</label>\r\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n            </div>\r\n            <div>\r\n                <label>Repair Price:</label>\r\n                <input type=\"number\" step=\"0.01\" value={repairPrice} onChange={(e) => setRepairPrice(e.target.value)} required />\r\n            </div>\r\n            <div>\r\n                <label>Purchase Price:</label>\r\n                <input type=\"number\" step=\"0.01\" value={purchasePrice} onChange={(e) => setPurchasePrice(e.target.value)} />\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ComponentForm;\r\n","import React from 'react';\r\nimport ComponentForm from '../components/ComponentForm';\r\n\r\nconst Components = () => {\r\n  return (\r\n    <div>\r\n      <h1>Components</h1>\r\n      <ComponentForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Components;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport csrftoken from '../csrf';\r\n\r\nconst VehicleForm = () => {\r\n    const [make, setMake] = useState('');\r\n    const [model, setModel] = useState('');\r\n    const [year, setYear] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('/api/vehicles/',\r\n                {\r\n                    make,\r\n                    model,\r\n                    year\r\n                },\r\n                {\r\n                    headers: {\r\n                        'X-CSRFToken': csrftoken // Send the CSRF token\r\n                    }\r\n                }\r\n            );\r\n\r\n            setMake('');\r\n            setModel('');\r\n            setYear('');\r\n        } catch (error) {\r\n            console.error(\"There was an error!\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Vehicle</h2>\r\n            <div>\r\n                <label>Make:</label>\r\n                <input type=\"text\" value={make} onChange={(e) => setMake(e.target.value)} required />\r\n            </div>\r\n            <div>\r\n                <label>Model:</label>\r\n                <input type=\"text\" value={model} onChange={(e) => setModel(e.target.value)} required />\r\n            </div>\r\n            <div>\r\n                <label>Year:</label>\r\n                <input type=\"number\" value={year} onChange={(e) => setYear(e.target.value)} required />\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default VehicleForm;\r\n","import React from 'react';\r\nimport VehicleForm from '../components/VehicleForm';\r\n\r\nconst Vehicles = () => {\r\n  return (\r\n    <div>\r\n      <h1>Vehicles</h1>\r\n      <VehicleForm/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vehicles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport csrftoken from '../csrf'; // Adjust the path as necessary\r\n\r\nconst IssueForm = () => {\r\n    const [vehicleId, setVehicleId] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [componentId, setComponentId] = useState('');\r\n    const [repairNeeded, setRepairNeeded] = useState(false);\r\n    const [repairPrice, setRepairPrice] = useState('');\r\n    const [vehicles, setVehicles] = useState([]);\r\n    const [components, setComponents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch vehicles and components from the API\r\n        const fetchData = async () => {\r\n            try {\r\n                const vehiclesResponse = await axios.get('/api/vehicles/');\r\n                const componentsResponse = await axios.get('/api/components/');\r\n                setVehicles(vehiclesResponse.data);\r\n                setComponents(componentsResponse.data);\r\n            } catch (error) {\r\n                console.error(\"There was an error fetching vehicles and components!\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('/api/issues/',\r\n                {\r\n                    vehicle: vehicleId,\r\n                    description,\r\n                    component: componentId || null,\r\n                    repair_needed: repairNeeded,\r\n                    repair_price: repairPrice || null\r\n                },\r\n                {\r\n                    headers: {\r\n                        'X-CSRFToken': csrftoken // Send the CSRF token\r\n                    }\r\n                }\r\n            );\r\n            // Reset form fields\r\n            setVehicleId('');\r\n            setDescription('');\r\n            setComponentId('');\r\n            setRepairNeeded(false);\r\n            setRepairPrice('');\r\n        } catch (error) {\r\n            console.error(\"There was an error!\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Issue</h2>\r\n            <div>\r\n                <label>Vehicle:</label>\r\n                <select value={vehicleId} onChange={(e) => setVehicleId(e.target.value)} required>\r\n                    <option value=\"\">Select Vehicle</option>\r\n                    {vehicles.map(vehicle => (\r\n                        <option key={vehicle.id} value={vehicle.id}>\r\n                            {vehicle.make} {vehicle.model} ({vehicle.year})\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Description:</label>\r\n                <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n            </div>\r\n            <div>\r\n                <label>Component (Optional):</label>\r\n                <select value={componentId} onChange={(e) => setComponentId(e.target.value)}>\r\n                    <option value=\"\">Select Component</option>\r\n                    {components.map(component => (\r\n                        <option key={component.id} value={component.id}>\r\n                            {component.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Repair Needed:</label>\r\n                <input type=\"checkbox\" checked={repairNeeded} onChange={(e) => setRepairNeeded(e.target.checked)} />\r\n            </div>\r\n            <div>\r\n                <label>Repair Price (if repair needed):</label>\r\n                <input type=\"number\" step=\"0.01\" value={repairPrice} onChange={(e) => setRepairPrice(e.target.value)} />\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default IssueForm;\r\n","import React from 'react';\r\nimport IssueForm from '../components/IssueForm';\r\n\r\nconst Issues = () => {\r\n  return (\r\n    <div>\r\n      <h1>Issues</h1>\r\n      <IssueForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Issues;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport csrftoken from '../csrf'; // Adjust the path as necessary\r\n\r\nconst TransactionSummary = () => {\r\n    const [vehicleId, setVehicleId] = useState('');\r\n    const [issueId, setIssueId] = useState('');\r\n    const [finalPrice, setFinalPrice] = useState('');\r\n    const [vehicles, setVehicles] = useState([]);\r\n    const [issues, setIssues] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch vehicles and issues from the API\r\n        const fetchData = async () => {\r\n            try {\r\n                const vehiclesResponse = await axios.get('/api/vehicles/');\r\n                const issuesResponse = await axios.get('/api/issues/');\r\n                setVehicles(vehiclesResponse.data);\r\n                setIssues(issuesResponse.data);\r\n            } catch (error) {\r\n                console.error(\"There was an error fetching vehicles and issues!\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('/api/transactions/',\r\n                {\r\n                    vehicle: vehicleId,\r\n                    issue: issueId,\r\n                    final_price: finalPrice\r\n                },\r\n                {\r\n                    headers: {\r\n                        'X-CSRFToken': csrftoken // Send the CSRF token\r\n                    }\r\n                }\r\n            );\r\n            // Reset form fields\r\n            setVehicleId('');\r\n            setIssueId('');\r\n            setFinalPrice('');\r\n        } catch (error) {\r\n            console.error(\"There was an error!\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Transaction</h2>\r\n            <div>\r\n                <label>Vehicle:</label>\r\n                <select value={vehicleId} onChange={(e) => setVehicleId(e.target.value)} required>\r\n                    <option value=\"\">Select Vehicle</option>\r\n                    {vehicles.map(vehicle => (\r\n                        <option key={vehicle.id} value={vehicle.id}>\r\n                            {vehicle.make} {vehicle.model} ({vehicle.year})\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Issue:</label>\r\n                <select value={issueId} onChange={(e) => setIssueId(e.target.value)} required>\r\n                    <option value=\"\">Select Issue</option>\r\n                    {issues.map(issue => (\r\n                        <option key={issue.id} value={issue.id}>\r\n                            {issue.description}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Final Price:</label>\r\n                <input type=\"number\" step=\"0.01\" value={finalPrice} onChange={(e) => setFinalPrice(e.target.value)} required />\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TransactionSummary;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TransactionSummary from '../components/TransactionSummary';\r\n\r\n\r\nfunction Transactions() {\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/transactions')\r\n      .then(response => response.json())\r\n      .then(data => setTransactions(data))\r\n      .catch(error => console.error('Error fetching transactions:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Transactions</h1>\r\n      <TransactionSummary /> {/* Include TransactionSummary here */}\r\n      {transactions.length === 0 ? (\r\n        <p>No transactions available.</p>\r\n      ) : (\r\n        <ul>\r\n          {transactions.map(transaction => (\r\n            <li key={transaction.id}>\r\n              {transaction.vehicle} - {transaction.issue} - ${transaction.final_price} on {transaction.date}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transactions;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li><Link to=\"/\">Dashboard</Link></li>\r\n        <li><Link to=\"/components\">Components</Link></li>\r\n        <li><Link to=\"/vehicles\">Vehicles</Link></li>\r\n        <li><Link to=\"/issues\">Issues</Link></li>\r\n        <li><Link to=\"/transactions\">Transactions</Link></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport Components from './pages/Components';\nimport Vehicles from './pages/Vehicles';\nimport Issues from './pages/Issues';\nimport Transactions from './pages/Transactions';\nimport Navbar from './components/Navbar';\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<Dashboard />} />\n        <Route path=\"/components\" element={<Components />} />\n        <Route path=\"/vehicles\" element={<Vehicles />} />\n        <Route path=\"/issues\" element={<Issues />} />\n        <Route path=\"/transactions\" element={<Transactions />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}