{"version":3,"sources":["api.js","components/RevenueGraphs.js","pages/Dashboard.js","csrf.js","components/ComponentForm.js","pages/Components.js","components/VehicleForm.js","pages/Vehicles.js","components/IssueForm.js","pages/Issues.js","pages/Transactions.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API","axios","create","baseURL","RevenueGraphs","data","setData","useState","useEffect","async","response","get","error","console","fetchData","length","React","createElement","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","Dashboard","csrftoken","name","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","getCookie","ComponentForm","selectedVehicle","setSelectedVehicle","description","setDescription","selectedComponent","setSelectedComponent","issueType","setIssueType","onSubmit","e","preventDefault","post","vehicle","component","issue_type","headers","value","onChange","target","required","Components","VehicleForm","ownerName","setOwnerName","vehicleType","setVehicleType","registrationNumber","setRegistrationNumber","owner_name","vehicle_type","registration_number","Vehicles","IssueForm","vehicles","setVehicles","components","setComponents","vehiclesResponse","componentsResponse","map","key","id","Issues","Transactions","transactions","setTransactions","fetch","then","json","catch","transaction","details","Navbar","Link","to","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"wVAMeA,MAJHC,IAAMC,OAAO,CACvBC,QAAS,8BC0CIC,MAzCOA,KACpB,MAAOC,EAAMC,GAAWC,mBAAS,IAejC,OAbAC,oBAAU,KACUC,WAChB,IACE,MAAMC,QAAiBV,EAAIW,IAAI,aAC/BL,EAAQI,EAASL,MACjB,MAAOO,GACPC,QAAQD,MAAM,+BAAgCA,KAIlDE,IACC,IAEiB,IAAhBT,EAAKU,OACAC,IAAAC,cAAA,SAAG,qBAIVD,IAAAC,cAACC,IAAmB,CAACC,MAAM,OAAOC,OAAQ,KACxCJ,IAAAC,cAACI,IAAS,CACRhB,KAAMA,EACNiB,OAAQ,CACNC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGvCV,IAAAC,cAACU,IAAa,CAACC,gBAAgB,QAC/BZ,IAAAC,cAACY,IAAK,CAACC,QAAQ,SACfd,IAAAC,cAACc,IAAK,MACNf,IAAAC,cAACe,IAAO,MACRhB,IAAAC,cAACgB,IAAM,MACPjB,IAAAC,cAACiB,IAAI,CAACC,KAAK,WAAWL,QAAQ,QAAQM,OAAO,YAC7CpB,IAAAC,cAACiB,IAAI,CAACC,KAAK,WAAWL,QAAQ,UAAUM,OAAO,YAC/CpB,IAAAC,cAACiB,IAAI,CAACC,KAAK,WAAWL,QAAQ,SAASM,OAAO,eC3BvCC,MATGA,IAEdrB,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAACb,EAAa,OCSLkC,MAhBf,SAAmBC,GACf,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAAe,CAC3C,MAAMC,EAAUF,SAASC,OAAOE,MAAM,KACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQ5B,OAAQ8B,IAAK,CACrC,MAAMH,EAASC,EAAQE,GAAGC,OAC1B,GAAIJ,EAAOK,UAAU,EAAGR,EAAKxB,OAAS,KAAQwB,EAAO,IAAM,CACvDC,EAAcQ,mBAAmBN,EAAOK,UAAUR,EAAKxB,OAAS,IAChE,QAIZ,OAAOyB,EAGOS,CAAU,aC6CbC,MAxDOA,KAClB,MAAOC,EAAiBC,GAAsB7C,mBAAS,KAChD8C,EAAaC,GAAkB/C,mBAAS,KACxCgD,EAAmBC,GAAwBjD,mBAAS,KACpDkD,EAAWC,GAAgBnD,mBAAS,IA4B3C,OACIS,IAAAC,cAAA,QAAM0C,SA3BWlD,UACjBmD,EAAEC,iBACF,UACU5D,IAAM6D,KAAK,mBACb,CACIC,QAASZ,EACTE,cACAW,UAAWT,EACXU,WAAYR,GAEhB,CACIS,QAAS,CACL,cAAe5B,KAK3Bc,EAAmB,IACnBE,EAAe,IACfE,EAAqB,IACrBE,EAAa,IACf,MAAO9C,GACLC,QAAQD,MAAM,sBAAuBA,MAMrCI,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,YACPD,IAAAC,cAAA,SAAOkB,KAAK,OAAOgC,MAAOhB,EAAiBiB,SAAWR,GAAMR,EAAmBQ,EAAES,OAAOF,OAAQG,UAAQ,KAE5GtD,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,gBACPD,IAAAC,cAAA,SAAOkB,KAAK,OAAOgC,MAAOd,EAAae,SAAWR,GAAMN,EAAeM,EAAES,OAAOF,OAAQG,UAAQ,KAEpGtD,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,cACPD,IAAAC,cAAA,SAAOkB,KAAK,OAAOgC,MAAOZ,EAAmBa,SAAWR,GAAMJ,EAAqBI,EAAES,OAAOF,OAAQG,UAAQ,KAEhHtD,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,SAAOkB,KAAK,OAAOgC,MAAOV,EAAWW,SAAWR,GAAMF,EAAaE,EAAES,OAAOF,OAAQG,UAAQ,KAEhGtD,IAAAC,cAAA,UAAQkB,KAAK,UAAS,YC3CnBoC,MATIA,IAEfvD,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAACiC,EAAa,OCkCLsB,MAtCKA,KAClB,MAAOC,EAAWC,GAAgBnE,mBAAS,KACpCoE,EAAaC,GAAkBrE,mBAAS,KACxCsE,EAAoBC,GAAyBvE,mBAAS,IAe7D,OACES,IAAAC,cAAA,QAAM0C,SAdalD,UACnBmD,EAAEC,iBACF,UACQ5D,IAAM6D,KAAK,iBAAkB,CAAEiB,WAAYN,EAAWO,aAAcL,EAAaM,oBAAqBJ,IAE5GH,EAAa,IACbE,EAAe,IACfE,EAAsB,IACtB,MAAOlE,GACPC,QAAQD,MAAM,sBAAuBA,MAMrCI,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,SAAOkB,KAAK,OAAOgC,MAAOM,EAAWL,SAAWR,GAAMc,EAAad,EAAES,OAAOF,OAAQG,UAAQ,KAE9FtD,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,iBACPD,IAAAC,cAAA,SAAOkB,KAAK,OAAOgC,MAAOQ,EAAaP,SAAWR,GAAMgB,EAAehB,EAAES,OAAOF,OAAQG,UAAQ,KAElGtD,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,wBACPD,IAAAC,cAAA,SAAOkB,KAAK,OAAOgC,MAAOU,EAAoBT,SAAWR,GAAMkB,EAAsBlB,EAAES,OAAOF,OAAQG,UAAQ,KAEhHtD,IAAAC,cAAA,UAAQkB,KAAK,UAAS,YCxBb+C,MATEA,IAEblE,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAACuD,EAAW,OCuEHW,MA3EGA,KAChB,MAAOC,EAAUC,GAAe9E,mBAAS,KAClC+E,EAAYC,GAAiBhF,mBAAS,KACtC4C,EAAiBC,GAAsB7C,mBAAS,KAChD8C,EAAaC,GAAkB/C,mBAAS,KACxCgD,EAAmBC,GAAwBjD,mBAAS,KACpDkD,EAAWC,GAAgBnD,mBAAS,IAE3CC,oBAAU,KACUC,WAChB,IACE,MAAM+E,QAAyBvF,IAAMU,IAAI,kBACnC8E,QAA2BxF,IAAMU,IAAI,oBAC3C0E,EAAYG,EAAiBnF,MAC7BkF,EAAcE,EAAmBpF,MACjC,MAAOO,GACPC,QAAQD,MAAM,uBAAwBA,KAI1CE,IACC,IAgBH,OACEE,IAAAC,cAAA,QAAM0C,SAfalD,UACnBmD,EAAEC,iBACF,UACQ5D,IAAM6D,KAAK,eAAgB,CAAEC,QAASZ,EAAiBE,cAAaW,UAAWT,EAAmBU,WAAYR,IAEpHL,EAAmB,IACnBE,EAAe,IACfE,EAAqB,IACrBE,EAAa,IACb,MAAO9C,GACPC,QAAQD,MAAM,0BAA2BA,MAMzCI,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,YACPD,IAAAC,cAAA,UAAQkD,MAAOhB,EAAiBiB,SAAWR,GAAMR,EAAmBQ,EAAES,OAAOF,OAAQG,UAAQ,GAC3FtD,IAAAC,cAAA,UAAQkD,MAAM,IAAG,kBAChBiB,EAASM,IAAI3B,GACZ/C,IAAAC,cAAA,UAAQ0E,IAAK5B,EAAQ6B,GAAIzB,MAAOJ,EAAQ6B,IAAK7B,EAAQkB,wBAI3DjE,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,gBACPD,IAAAC,cAAA,SAAOkB,KAAK,OAAOgC,MAAOd,EAAae,SAAWR,GAAMN,EAAeM,EAAES,OAAOF,OAAQG,UAAQ,KAElGtD,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,cACPD,IAAAC,cAAA,UAAQkD,MAAOZ,EAAmBa,SAAWR,GAAMJ,EAAqBI,EAAES,OAAOF,OAAQG,UAAQ,GAC/FtD,IAAAC,cAAA,UAAQkD,MAAM,IAAG,oBAChBmB,EAAWI,IAAI1B,GACdhD,IAAAC,cAAA,UAAQ0E,IAAK3B,EAAU4B,GAAIzB,MAAOH,EAAU4B,IAAK5B,EAAUzB,SAIjEvB,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,UAAQkD,MAAOV,EAAWW,SAAWR,GAAMF,EAAaE,EAAES,OAAOF,OAAQG,UAAQ,GAC/EtD,IAAAC,cAAA,UAAQkD,MAAM,IAAG,eACjBnD,IAAAC,cAAA,UAAQkD,MAAM,UAAS,UACvBnD,IAAAC,cAAA,UAAQkD,MAAM,OAAM,SAGxBnD,IAAAC,cAAA,UAAQkB,KAAK,UAAS,YC7Db0D,MATAA,IAEX7E,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAACkE,EAAS,OCsBDW,MA3Bf,WACE,MAAOC,EAAcC,GAAmBhF,IAAMT,SAAS,IAUvD,OARAS,IAAMR,UAAU,KAEdyF,MAAM,qBACHC,KAAKxF,GAAYA,EAASyF,QAC1BD,KAAK7F,GAAQ2F,EAAgB3F,IAC7B+F,MAAMxF,GAASC,QAAQD,MAAM,+BAAgCA,KAC/D,IAGDI,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,gBACqB,IAAxB8E,EAAahF,OACZC,IAAAC,cAAA,SAAG,8BAEHD,IAAAC,cAAA,UACG8E,EAAaL,IAAIW,GAChBrF,IAAAC,cAAA,MAAI0E,IAAKU,EAAYT,IAAKS,EAAYC,aCJnCC,MAdAA,IAEXvF,IAAAC,cAAA,WACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAID,IAAAC,cAACuF,IAAI,CAACC,GAAG,KAAI,cACjBzF,IAAAC,cAAA,UAAID,IAAAC,cAACuF,IAAI,CAACC,GAAG,eAAc,eAC3BzF,IAAAC,cAAA,UAAID,IAAAC,cAACuF,IAAI,CAACC,GAAG,aAAY,aACzBzF,IAAAC,cAAA,UAAID,IAAAC,cAACuF,IAAI,CAACC,GAAG,WAAU,WACvBzF,IAAAC,cAAA,UAAID,IAAAC,cAACuF,IAAI,CAACC,GAAG,iBAAgB,mBCatBC,MAfHA,IAER1F,IAAAC,cAAC0F,IAAM,KACL3F,IAAAC,cAACsF,EAAM,MACPvF,IAAAC,cAAC2F,IAAM,KACL5F,IAAAC,cAAC4F,IAAK,CAACC,KAAK,IAAIC,QAAS/F,IAAAC,cAACoB,EAAS,QACnCrB,IAAAC,cAAC4F,IAAK,CAACC,KAAK,cAAcC,QAAS/F,IAAAC,cAACsD,EAAU,QAC9CvD,IAAAC,cAAC4F,IAAK,CAACC,KAAK,YAAYC,QAAS/F,IAAAC,cAACiE,EAAQ,QAC1ClE,IAAAC,cAAC4F,IAAK,CAACC,KAAK,UAAUC,QAAS/F,IAAAC,cAAC4E,EAAM,QACtC7E,IAAAC,cAAC4F,IAAK,CAACC,KAAK,gBAAgBC,QAAS/F,IAAAC,cAAC6E,EAAY,UCN3CkB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,KAAKiB,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWjF,SAASkF,eAAe,SACpDC,OACH5G,IAAAC,cAACD,IAAM6G,WAAU,KACf7G,IAAAC,cAACyF,EAAG,QAORM,M","file":"static/js/main.a4c2dfb8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:8000/api',\r\n});\r\n\r\nexport default API;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport API from '../api';\r\n\r\nconst RevenueGraphs = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await API.get('/revenue/');\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching revenue data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (data.length === 0) {\r\n    return <p>No data available</p>;\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={400}>\r\n      <LineChart\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"daily\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"monthly\" stroke=\"#82ca9d\" />\r\n        <Line type=\"monotone\" dataKey=\"yearly\" stroke=\"#ffc658\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default RevenueGraphs;\r\n","import React from 'react';\r\nimport RevenueGraphs from '../components/RevenueGraphs';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <RevenueGraphs />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nconst csrftoken = getCookie('csrftoken');\r\nexport default csrftoken;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport csrftoken from '../csrf';\r\n\r\nconst ComponentForm = () => {\r\n    const [selectedVehicle, setSelectedVehicle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [selectedComponent, setSelectedComponent] = useState('');\r\n    const [issueType, setIssueType] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('/api/components/',\r\n                {\r\n                    vehicle: selectedVehicle,\r\n                    description,\r\n                    component: selectedComponent,\r\n                    issue_type: issueType\r\n                },\r\n                {\r\n                    headers: {\r\n                        'X-CSRFToken': csrftoken //\r\n                    }\r\n                }\r\n            );\r\n            // Reset form fields\r\n            setSelectedVehicle('');\r\n            setDescription('');\r\n            setSelectedComponent('');\r\n            setIssueType('');\r\n        } catch (error) {\r\n            console.error(\"There was an error!\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Component</h2>\r\n            <div>\r\n                <label>Vehicle:</label>\r\n                <input type=\"text\" value={selectedVehicle} onChange={(e) => setSelectedVehicle(e.target.value)} required />\r\n            </div>\r\n            <div>\r\n                <label>Description:</label>\r\n                <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n            </div>\r\n            <div>\r\n                <label>Component:</label>\r\n                <input type=\"text\" value={selectedComponent} onChange={(e) => setSelectedComponent(e.target.value)} required />\r\n            </div>\r\n            <div>\r\n                <label>Issue Type:</label>\r\n                <input type=\"text\" value={issueType} onChange={(e) => setIssueType(e.target.value)} required />\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ComponentForm;\r\n","import React from 'react';\r\nimport ComponentForm from '../components/ComponentForm';\r\n\r\nconst Components = () => {\r\n  return (\r\n    <div>\r\n      <h1>Components</h1>\r\n      <ComponentForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Components;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst VehicleForm = () => {\r\n  const [ownerName, setOwnerName] = useState('');\r\n  const [vehicleType, setVehicleType] = useState('');\r\n  const [registrationNumber, setRegistrationNumber] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/vehicles/', { owner_name: ownerName, vehicle_type: vehicleType, registration_number: registrationNumber });\r\n      // Reset form fields\r\n      setOwnerName('');\r\n      setVehicleType('');\r\n      setRegistrationNumber('');\r\n    } catch (error) {\r\n      console.error(\"There was an error!\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add Vehicle</h2>\r\n      <div>\r\n        <label>Owner Name:</label>\r\n        <input type=\"text\" value={ownerName} onChange={(e) => setOwnerName(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Vehicle Type:</label>\r\n        <input type=\"text\" value={vehicleType} onChange={(e) => setVehicleType(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Registration Number:</label>\r\n        <input type=\"text\" value={registrationNumber} onChange={(e) => setRegistrationNumber(e.target.value)} required />\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default VehicleForm;\r\n","import React from 'react';\r\nimport VehicleForm from '../components/VehicleForm';\r\n\r\nconst Vehicles = () => {\r\n  return (\r\n    <div>\r\n      <h1>Vehicles</h1>\r\n      <VehicleForm/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vehicles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst IssueForm = () => {\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [components, setComponents] = useState([]);\r\n  const [selectedVehicle, setSelectedVehicle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [selectedComponent, setSelectedComponent] = useState('');\r\n  const [issueType, setIssueType] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const vehiclesResponse = await axios.get('/api/vehicles/');\r\n        const componentsResponse = await axios.get('/api/components/');\r\n        setVehicles(vehiclesResponse.data);\r\n        setComponents(componentsResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/issues/', { vehicle: selectedVehicle, description, component: selectedComponent, issue_type: issueType });\r\n      // Reset form fields\r\n      setSelectedVehicle('');\r\n      setDescription('');\r\n      setSelectedComponent('');\r\n      setIssueType('');\r\n    } catch (error) {\r\n      console.error(\"Error submitting issue:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add Issue</h2>\r\n      <div>\r\n        <label>Vehicle:</label>\r\n        <select value={selectedVehicle} onChange={(e) => setSelectedVehicle(e.target.value)} required>\r\n          <option value=\"\">Select Vehicle</option>\r\n          {vehicles.map(vehicle => (\r\n            <option key={vehicle.id} value={vehicle.id}>{vehicle.registration_number}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>Description:</label>\r\n        <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Component:</label>\r\n        <select value={selectedComponent} onChange={(e) => setSelectedComponent(e.target.value)} required>\r\n          <option value=\"\">Select Component</option>\r\n          {components.map(component => (\r\n            <option key={component.id} value={component.id}>{component.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>Issue Type:</label>\r\n        <select value={issueType} onChange={(e) => setIssueType(e.target.value)} required>\r\n          <option value=\"\">Select Type</option>\r\n          <option value=\"repair\">Repair</option>\r\n          <option value=\"new\">New</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default IssueForm;\r\n","import React from 'react';\r\nimport IssueForm from '../components/IssueForm';\r\n\r\nconst Issues = () => {\r\n  return (\r\n    <div>\r\n      <h1>Issues</h1>\r\n      <IssueForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Issues;\r\n","import React from 'react';\r\n\r\nfunction Transactions() {\r\n  const [transactions, setTransactions] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    // Fetch transactions from the API\r\n    fetch('/api/transactions')\r\n      .then(response => response.json())\r\n      .then(data => setTransactions(data))\r\n      .catch(error => console.error('Error fetching transactions:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Transactions</h1>\r\n      {transactions.length === 0 ? (\r\n        <p>No transactions available.</p>\r\n      ) : (\r\n        <ul>\r\n          {transactions.map(transaction => (\r\n            <li key={transaction.id}>{transaction.details}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transactions;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li><Link to=\"/\">Dashboard</Link></li>\r\n        <li><Link to=\"/components\">Components</Link></li>\r\n        <li><Link to=\"/vehicles\">Vehicles</Link></li>\r\n        <li><Link to=\"/issues\">Issues</Link></li>\r\n        <li><Link to=\"/transactions\">Transactions</Link></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport Components from './pages/Components';\nimport Vehicles from './pages/Vehicles';\nimport Issues from './pages/Issues';\nimport Transactions from './pages/Transactions';\nimport Navbar from './components/Navbar';\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<Dashboard />} />\n        <Route path=\"/components\" element={<Components />} />\n        <Route path=\"/vehicles\" element={<Vehicles />} />\n        <Route path=\"/issues\" element={<Issues />} />\n        <Route path=\"/transactions\" element={<Transactions />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}